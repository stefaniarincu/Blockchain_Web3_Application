/**
 * This code was generated by v0 by Vercel.
 * @see https://v0.dev/t/hCikJahjMXt
 * Documentation: https://v0.dev/docs#integrating-generated-code-into-your-nextjs-app
 */

/** Add fonts into your Next.js project:

import { Inter } from 'next/font/google'
import { Inter } from 'next/font/google'

inter({
  subsets: ['latin'],
  display: 'swap',
})

inter({
  subsets: ['latin'],
  display: 'swap',
})

To read more about using these font, please visit the Next.js documentation:
- App Directory: https://nextjs.org/docs/app/building-your-application/optimizing/fonts
- Pages Directory: https://nextjs.org/docs/pages/building-your-application/optimizing/fonts
**/

/** Add border radius CSS variable to your global CSS:

:root {
  --radius: 0.5rem;
}
**/
import {
  TableHead,
  TableRow,
  TableHeader,
  TableCell,
  TableBody,
  Table,
} from "@/components/ui/table";
import { Checkbox } from "@/components/ui/checkbox";
import useContract from "@/context/useContract";
import { useEffect, useState } from "react";

const LocalCheckbox = ({ id, onCheckedChange }: any) => {
  const { currentAccount, hasVotedFor } = useContract();
  const [voted, setVoted] = useState("loading");

  useEffect(() => {
    hasVotedFor(currentAccount, id)
      .then((res: any) => {
        if (res === true) setVoted("voted");
        else setVoted("not-voted");
      })
      .catch((error: any) => {
        console.log(error);
      });
    // eslint-disable-next-line react-hooks/exhaustive-deps
  }, []);

  if (voted === "loading") return "Loading...";

  return voted === "voted" ? (
    "Voted"
  ) : (
    <Checkbox id={`select-${id}`} onCheckedChange={onCheckedChange} />
  );
};

export function VotingOptionsTable({ candidatesData, setToVoteIds }: any) {
  const handleSelect = (id: number) => (checked: boolean) => {
    if (checked) {
      setToVoteIds((prev: any) => [...prev, id]);
    } else {
      setToVoteIds((prev: any) => prev.filter((el: any) => el !== id));
    }
  };

  return (
    <Table>
      <TableHeader>
        <TableRow>
          <TableHead className="w-[60px]">ID</TableHead>
          <TableHead>Hex Address</TableHead>
          <TableHead>Name</TableHead>
          <TableHead>Description</TableHead>
          <TableHead className="w-[80px] text-center">Select</TableHead>
        </TableRow>
      </TableHeader>
      <TableBody>
        {candidatesData.map((candidate: any) => (
          <TableRow key={candidate.id}>
            <TableCell className="font-semibold">{candidate.id}</TableCell>
            <TableCell className="whitespace-nowrap">
              {candidate.address}
            </TableCell>
            <TableCell>{candidate.name}</TableCell>
            <TableCell className="whitespace-pre-line">
              {candidate.description}
            </TableCell>
            <TableCell className="text-center">
              <LocalCheckbox
                id={candidate.id}
                onCheckedChange={handleSelect(candidate.id)}
              />
            </TableCell>
          </TableRow>
        ))}
      </TableBody>
    </Table>
  );
}
